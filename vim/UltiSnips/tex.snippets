#--------------------------
#         GENERAL
#--------------------------
#
snippet doc "Document structure"
\documentclass[12pt]{${1:article}}
$2

\title{$3}
\author{${4:Arnau Mas}}
\date{$5}

\begin{document}
\maketitle

$0

\end{document}
endsnippet

snippet co "LaTeX command" i
\\${0:${VISUAL}}
endsnippet

snippet com "LaTeX command with arguments" i
\\$1{${2:${VISUAL}}}$0
endsnippet

snippet cop "LaTeX command with arguments and optional parameters" i
\\$1[$2]{${3:${VISUAL}}}$0
endsnippet

global !p
def create_command_placeholders(snip, vim):
	# Detect if at end of line
	eol = (len(snip.buffer[snip.line]) == snip.snippet_end[1])
	# Capture amount of arguments
	placeholders = int(snip.buffer[snip.line][snip.snippet_start[1]:snip.snippet_end[1]])
	# Erase the captured input
	snip.buffer[snip.line] = snip.buffer[snip.line][:snip.snippet_start[1]] + snip.buffer[snip.line][snip.snippet_end[1]:]

	# Create and expand anonymous snippet with command with 'n' parameters
	anon_snippet = '\\\\$1' + ''.join(['{$' + str(i + 2) + '}' for i in range(placeholders)]) + '$0'
	if eol:
		snip.expand_anon(anon_snippet)
	else:
		vim.command('normal h')
		snip.expand_anon(anon_snippet)
endglobal

post_jump "create_command_placeholders(snip,vim)"
snippet /com(\d+)/ "LaTeX command with variable ammount of arguments" ir
`!p snip.rv = match.group(1)`
endsnippet


snippet be "Begin environment"
\begin{$1}
	$0
\end{$1}
endsnippet

snippet bep "Begin environment with parameters"
\begin{$1}[$2]
	$0
\end{$1}
endsnippet

snippet up "Include package"
\usepackage{$1}$0
endsnippet

snippet upp "Include package with parameters"
\usepackage[$2]{$1}$0
endsnippet

snippet sec "Section"
\section{$1}
$0
endsnippet

snippet eq "Begin unnumbered equation"
\begin{equation*}
	$1
\end{equation*}
$0
endsnippet

snippet eqn "Begin numbered equation"
\begin{equation} \label{eqn:$2}
	$1
\end{equation}
$0
endsnippet

#--------------------------
#       MATH SPECIFIC
#--------------------------

snippet dm "Display math"
\[ $1 \]$0
endsnippet

snippet 'im' "Inline math" ir
\( ${1:${VISUAL}} \)$0
endsnippet

snippet br "Set brackets"
\\\{ $1 \\\}$0
endsnippet

snippet array "Equation array"
\begin{align}
$0
\end{align}
endsnippet

snippet /(\w)+u([d])+/ "Inline function definition" ir
${1:`!p snip.rv = match.group(1)`} \colon ${2:`!p snip.rv = "\Omega" if match.group(2) is not None else "\C"`} \to \C$0
endsnippet

snippet fun "Function definition"
$1 \colon $2 & \longrightarrow $3 \\\\
$4 & \longmapsto $5
endsnippet

snippet _ "Subscript" i
_{$1}$0
endsnippet

snippet ^ "Superscript" i
^{$1}$0
endsnippet

snippet fr "Fraction" i
\frac{$1}{$2}$0
endsnippet

snippet sq "Square root" i
\sqrt{$1}$0
endsnippet

snippet li "Limit" i
\lim_{$1 \to $2}{$3}$0
endsnippet

snippet /sum(\w)?/ "Sum with subindex" ir
\sum_{${1:`!p snip.rv = match.group(1) if match.group(1) is not None else ""`} = $2}^{$3}$0 
endsnippet

snippet bf "Bold" 
\mathbf{$1}$0
endsnippet

snippet cos "Cosine" i
\cos{$1}$0
endsnippet

snippet sin "Sine" i
\sin{$1}$0
endsnippet

snippet log "Logarithm" i
\log{$1}$0
endsnippet

snippet inn "Inner product" i
\inn{$1}{$2}$0
endsnippet

snippet dif "Differential of a function" i
\dif{$1}{$2}{$3}$0
endsnippet

snippet der "Derivative operator" i
\dfrac{d}{d $1}$0
endsnippet

snippet derf "Derivative of a function" i
\dfrac{d $1}{d $2}$0
endsnippet

snippet del "Partial derivative operator" i
\dfrac{\partial}{\partial $1}$0
endsnippet

snippet delf "Partial derivative of a function" i
\dfrac{\partial $1}{\partial $2}$0
endsnippet

#-------------------------
#     PACKAGE SPECIFIC
#--------------------------
#  * siunitx

snippet num "Number with unit"
\SI{$1}{$2}$0
endsnippet

snippet data "Value with units and uncertainty"
\data{$1}{$2}{$3}$0
endsnippet

snippet vmev "Value in MeV"
\SI{$1}{\mega\eV}$0
endsnippet

snippet vmevc "Value in MeV/c"
\SI[per-mode=slash,eVcorra=0.2ex]{$1}{\mega\eVperc}$0
endsnippet

snippet vmevc2 "Value in MeV/c2"
\SI[per-mode=slash,eVcorra=0.2ex]{$1}{\mega\eVperc\squared}$0
endsnippet

snippet mev "MeV"
\si{\mega\eV}$0
endsnippet

snippet mevc "MeV/c"
\si[per-mode=slash,eVcorra=0.2ex]{\mega\eVperc}$0
endsnippet

snippet mevc2 "MeV/c2"
\si[per-mode=slash,eVcorra=0.2ex]{\mega\eVperc\squared}$0
endsnippet
